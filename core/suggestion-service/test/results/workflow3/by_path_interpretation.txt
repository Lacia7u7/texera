This workflow contains the following execution paths:

Path 1:
- CSV File Scan (CSVFileScan)
  Properties:
    - fileEncoding: UTF_8
    - customDelimiter: ,
    - hasHeader: True
    - fileName: /workflow_migrator@texera/ds4all-lecture-example/v1/clean_tweets.csv
  Connects from port 'output-0' to 'Projection' port 'input-0'
- Projection (Projection)
  Properties:
    - isDrop: False
    - attributes: [{'alias': '', 'originalAttribute': 'tweet_id'}, {'alias': '', 'originalAttribute': 'create_at_month'}, {'alias': '', 'originalAttribute': 'favorite_count'}, {'alias': '', 'originalAttribute': 'retweet_count'}]
  Input Schema:
    - Schema items: 8
      Item 0: {'attributeName': 'tweet_id', 'attributeType': 'integer'}
      Item 1: {'attributeName': 'create_at_month', 'attributeType': 'timestamp'}
      Item 2: {'attributeName': 'favorite_count', 'attributeType': 'integer'}
      Item 3: {'attributeName': 'retweet_count', 'attributeType': 'integer'}
      Item 4: {'attributeName': 'is_retweet', 'attributeType': 'boolean'}
      Item 5: {'attributeName': 'lang', 'attributeType': 'string'}
      Item 6: {'attributeName': 'text', 'attributeType': 'string'}
      Item 7: {'attributeName': 'user_id', 'attributeType': 'integer'}
  Connects from port 'output-0' to 'Sort' port 'input-0'
- Sort (Sort)
  Properties:
    - attributes: [{'attribute': 'favorite_count', 'sortPreference': 'DESC'}]
  Input Schema:
    - Schema items: 4
      Item 0: {'attributeName': 'tweet_id', 'attributeType': 'integer'}
      Item 1: {'attributeName': 'create_at_month', 'attributeType': 'timestamp'}
      Item 2: {'attributeName': 'favorite_count', 'attributeType': 'integer'}
      Item 3: {'attributeName': 'retweet_count', 'attributeType': 'integer'}
  Connects from port 'output-0' to 'Line Chart' port 'input-0'
- Line Chart (LineChart)
  Properties:
    - yLabel: Y Axis
    - xLabel: X Axis
  ERROR: {'type': {'value': 0, 'index': 0, 'name': 'COMPILATION_ERROR', 'compilationError': True, 'executionFailure': False, 'unrecognized': False}, 'timestamp': {'seconds': 1744853005, 'nanos': 636787000, 'unknownFields': {'fields': {}}}, 'message': 'java.lang.RuntimeException: Operator is not configured properly: null', 'details': 'Stack trace for developers: \n\njava.lang.RuntimeException: Operator is not configured properly: null\nedu.uci.ics.amber.compiler.WorkflowCompiler.$anonfun$expandLogicalPlan$9(WorkflowCompiler.scala:149)\nscala.Option.foreach(Option.scala:437)\nedu.uci.ics.amber.compiler.WorkflowCompiler.$anonfun$expandLogicalPlan$3(WorkflowCompiler.scala:146)\nedu.uci.ics.amber.compiler.WorkflowCompiler.$anonfun$expandLogicalPlan$3$adapted(WorkflowCompiler.scala:119)\nscala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)\nscala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)\nscala.collection.AbstractIterator.foreach(Iterator.scala:1300)\nedu.uci.ics.amber.compiler.WorkflowCompiler.$anonfun$expandLogicalPlan$1(WorkflowCompiler.scala:119)\nscala.collection.IterableOnceOps.foreach(IterableOnce.scala:576)\nscala.collection.IterableOnceOps.foreach$(IterableOnce.scala:574)\nscala.collection.AbstractIterator.foreach(Iterator.scala:1300)\nedu.uci.ics.amber.compiler.WorkflowCompiler.expandLogicalPlan(WorkflowCompiler.scala:109)\nedu.uci.ics.amber.compiler.WorkflowCompiler.compile(WorkflowCompiler.scala:188)\nedu.uci.ics.texera.service.resource.WorkflowCompilationResource.compileWorkflow(WorkflowCompilationResource.scala:52)\njdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\norg.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:146)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:189)\norg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)\norg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:93)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:478)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:400)\norg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)\norg.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:256)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\norg.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\norg.glassfish.jersey.internal.Errors.process(Errors.java:292)\norg.glassfish.jersey.internal.Errors.process(Errors.java:274)\norg.glassfish.jersey.internal.Errors.process(Errors.java:244)\norg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\norg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:235)\norg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:684)\norg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)\norg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:358)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:311)\norg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)\norg.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:764)\norg.eclipse.jetty.servlet.ServletHandler$ChainEnd.doFilter(ServletHandler.java:1665)\nio.dropwizard.servlets.ThreadNameFilter.doFilter(ThreadNameFilter.java:36)\norg.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:202)\norg.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1635)\nio.dropwizard.jersey.filter.AllowedMethodsFilter.handle(AllowedMethodsFilter.java:46)\nio.dropwizard.jersey.filter.AllowedMethodsFilter.doFilter(AllowedMethodsFilter.java:40)\norg.eclipse.jetty.servlet.FilterHolder.doFilter(FilterHolder.java:202)\norg.eclipse.jetty.servlet.ServletHandler$Chain.doFilter(ServletHandler.java:1635)\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:527)\norg.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:221)\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1381)\norg.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:176)\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:484)\norg.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:174)\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1303)\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:129)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)\nio.dropwizard.metrics.jetty11.InstrumentedHandler.handle(InstrumentedHandler.java:313)\nio.dropwizard.jetty.RoutingHandler.handle(RoutingHandler.java:52)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)\norg.eclipse.jetty.server.handler.gzip.GzipHandler.handle(GzipHandler.java:822)\nio.dropwizard.jetty.ZipExceptionHandlingGzipHandler.handle(ZipExceptionHandlingGzipHandler.java:26)\norg.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:46)\norg.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:173)\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:122)\norg.eclipse.jetty.server.Server.handle(Server.java:563)\norg.eclipse.jetty.server.HttpChannel$RequestDispatchable.dispatch(HttpChannel.java:1598)\norg.eclipse.jetty.server.HttpChannel.dispatch(HttpChannel.java:753)\norg.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:501)\norg.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:287)\norg.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:314)\norg.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:100)\norg.eclipse.jetty.io.SelectableChannelEndPoint$1.run(SelectableChannelEndPoint.java:53)\norg.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.runTask(AdaptiveExecutionStrategy.java:421)\norg.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.consumeTask(AdaptiveExecutionStrategy.java:390)\norg.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce(AdaptiveExecutionStrategy.java:277)\norg.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run(AdaptiveExecutionStrategy.java:199)\norg.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:411)\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:969)\norg.eclipse.jetty.util.thread.QueuedThreadPool$Runner.doRunJob(QueuedThreadPool.java:1194)\norg.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:1149)\njava.base/java.lang.Thread.run(Thread.java:829)', 'operatorId': 'LineChart-operator-e3009841-32e4-4080-a6e4-f659762b3865', 'workerId': ''}
  Input Schema:
    - Schema items: 4
      Item 0: {'attributeName': 'tweet_id', 'attributeType': 'integer'}
      Item 1: {'attributeName': 'create_at_month', 'attributeType': 'timestamp'}
      Item 2: {'attributeName': 'favorite_count', 'attributeType': 'integer'}
      Item 3: {'attributeName': 'retweet_count', 'attributeType': 'integer'}

Path 2:
- CSV File Scan (CSVFileScan)
  Properties:
    - fileEncoding: UTF_8
    - customDelimiter: ,
    - hasHeader: True
    - fileName: /workflow_migrator@texera/ds4all-lecture-example/v1/clean_tweets.csv
  Connects from port 'output-0' to 'Projection' port 'input-0'
- Projection (Projection)
  Properties:
    - isDrop: False
    - attributes: [{'alias': '', 'originalAttribute': 'text'}]
  Input Schema:
    - Schema items: 8
      Item 0: {'attributeName': 'tweet_id', 'attributeType': 'integer'}
      Item 1: {'attributeName': 'create_at_month', 'attributeType': 'timestamp'}
      Item 2: {'attributeName': 'favorite_count', 'attributeType': 'integer'}
      Item 3: {'attributeName': 'retweet_count', 'attributeType': 'integer'}
      Item 4: {'attributeName': 'is_retweet', 'attributeType': 'boolean'}
      Item 5: {'attributeName': 'lang', 'attributeType': 'string'}
      Item 6: {'attributeName': 'text', 'attributeType': 'string'}
      Item 7: {'attributeName': 'user_id', 'attributeType': 'integer'}
  Connects from port 'output-0' to 'Python UDF' port 'input-0'
- Python UDF (PythonUDFV2)
  Properties:
    - code: # Choose from the following templates:
# 
from pytexera import *

class ProcessTupleOperator(UDFOperatorV2):
    
    @overrides
    def process_tuple(self, tuple_: Tuple, port: int) -> Iterator[Optional[TupleLike]]:
        tuple_['text_length'] = len(tuple_['text'])
        yield tuple_

# class ProcessBatchOperator(UDFBatchOperator):
#     BATCH_SIZE = 10 # must be a positive integer
# 
#     @overrides
#     def process_batch(self, batch: Batch, port: int) -> Iterator[Optional[BatchLike]]:
#         yield batch
# 
# class ProcessTableOperator(UDFTableOperator):
# 
#     @overrides
#     def process_table(self, table: Table, port: int) -> Iterator[Optional[TableLike]]:
#         yield table

    - workers: 1
    - retainInputColumns: True
    - outputColumns: [{'attributeName': 'text_length', 'attributeType': 'integer'}]
  Input Schema:
    - Schema items: 1
      Item 0: {'attributeName': 'text', 'attributeType': 'string'}

