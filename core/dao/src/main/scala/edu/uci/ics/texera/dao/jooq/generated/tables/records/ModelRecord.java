/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.records;


import edu.uci.ics.texera.dao.jooq.generated.tables.Model;
import edu.uci.ics.texera.dao.jooq.generated.tables.interfaces.IModel;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelRecord extends UpdatableRecordImpl<ModelRecord> implements Record7<Integer, Integer, String, Boolean, Boolean, String, Timestamp>, IModel {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>texera_db.model.mid</code>.
     */
    @Override
    public void setMid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.model.mid</code>.
     */
    @Override
    public Integer getMid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>texera_db.model.owner_uid</code>.
     */
    @Override
    public void setOwnerUid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.model.owner_uid</code>.
     */
    @Override
    public Integer getOwnerUid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>texera_db.model.name</code>.
     */
    @Override
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>texera_db.model.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>texera_db.model.is_public</code>.
     */
    @Override
    public void setIsPublic(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>texera_db.model.is_public</code>.
     */
    @Override
    public Boolean getIsPublic() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>texera_db.model.is_downloadable</code>.
     */
    @Override
    public void setIsDownloadable(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>texera_db.model.is_downloadable</code>.
     */
    @Override
    public Boolean getIsDownloadable() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>texera_db.model.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>texera_db.model.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>texera_db.model.creation_time</code>.
     */
    @Override
    public void setCreationTime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>texera_db.model.creation_time</code>.
     */
    @Override
    public Timestamp getCreationTime() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, Boolean, Boolean, String, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, Boolean, Boolean, String, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Model.MODEL.MID;
    }

    @Override
    public Field<Integer> field2() {
        return Model.MODEL.OWNER_UID;
    }

    @Override
    public Field<String> field3() {
        return Model.MODEL.NAME;
    }

    @Override
    public Field<Boolean> field4() {
        return Model.MODEL.IS_PUBLIC;
    }

    @Override
    public Field<Boolean> field5() {
        return Model.MODEL.IS_DOWNLOADABLE;
    }

    @Override
    public Field<String> field6() {
        return Model.MODEL.DESCRIPTION;
    }

    @Override
    public Field<Timestamp> field7() {
        return Model.MODEL.CREATION_TIME;
    }

    @Override
    public Integer component1() {
        return getMid();
    }

    @Override
    public Integer component2() {
        return getOwnerUid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Boolean component4() {
        return getIsPublic();
    }

    @Override
    public Boolean component5() {
        return getIsDownloadable();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Timestamp component7() {
        return getCreationTime();
    }

    @Override
    public Integer value1() {
        return getMid();
    }

    @Override
    public Integer value2() {
        return getOwnerUid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Boolean value4() {
        return getIsPublic();
    }

    @Override
    public Boolean value5() {
        return getIsDownloadable();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public Timestamp value7() {
        return getCreationTime();
    }

    @Override
    public ModelRecord value1(Integer value) {
        setMid(value);
        return this;
    }

    @Override
    public ModelRecord value2(Integer value) {
        setOwnerUid(value);
        return this;
    }

    @Override
    public ModelRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ModelRecord value4(Boolean value) {
        setIsPublic(value);
        return this;
    }

    @Override
    public ModelRecord value5(Boolean value) {
        setIsDownloadable(value);
        return this;
    }

    @Override
    public ModelRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ModelRecord value7(Timestamp value) {
        setCreationTime(value);
        return this;
    }

    @Override
    public ModelRecord values(Integer value1, Integer value2, String value3, Boolean value4, Boolean value5, String value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IModel from) {
        setMid(from.getMid());
        setOwnerUid(from.getOwnerUid());
        setName(from.getName());
        setIsPublic(from.getIsPublic());
        setIsDownloadable(from.getIsDownloadable());
        setDescription(from.getDescription());
        setCreationTime(from.getCreationTime());
    }

    @Override
    public <E extends IModel> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelRecord
     */
    public ModelRecord() {
        super(Model.MODEL);
    }

    /**
     * Create a detached, initialised ModelRecord
     */
    public ModelRecord(Integer mid, Integer ownerUid, String name, Boolean isPublic, Boolean isDownloadable, String description, Timestamp creationTime) {
        super(Model.MODEL);

        setMid(mid);
        setOwnerUid(ownerUid);
        setName(name);
        setIsPublic(isPublic);
        setIsDownloadable(isDownloadable);
        setDescription(description);
        setCreationTime(creationTime);
    }

    /**
     * Create a detached, initialised ModelRecord
     */
    public ModelRecord(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.Model value) {
        super(Model.MODEL);

        if (value != null) {
            setMid(value.getMid());
            setOwnerUid(value.getOwnerUid());
            setName(value.getName());
            setIsPublic(value.getIsPublic());
            setIsDownloadable(value.getIsDownloadable());
            setDescription(value.getDescription());
            setCreationTime(value.getCreationTime());
        }
    }
}
