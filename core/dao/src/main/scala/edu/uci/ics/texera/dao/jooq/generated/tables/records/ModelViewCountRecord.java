/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 * 
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dao.jooq.generated.tables.records;


import edu.uci.ics.texera.dao.jooq.generated.tables.ModelViewCount;
import edu.uci.ics.texera.dao.jooq.generated.tables.interfaces.IModelViewCount;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelViewCountRecord extends UpdatableRecordImpl<ModelViewCountRecord> implements Record2<Integer, Integer>, IModelViewCount {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>texera_db.model_view_count.mid</code>.
     */
    @Override
    public void setMid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>texera_db.model_view_count.mid</code>.
     */
    @Override
    public Integer getMid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>texera_db.model_view_count.view_count</code>.
     */
    @Override
    public void setViewCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>texera_db.model_view_count.view_count</code>.
     */
    @Override
    public Integer getViewCount() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ModelViewCount.MODEL_VIEW_COUNT.MID;
    }

    @Override
    public Field<Integer> field2() {
        return ModelViewCount.MODEL_VIEW_COUNT.VIEW_COUNT;
    }

    @Override
    public Integer component1() {
        return getMid();
    }

    @Override
    public Integer component2() {
        return getViewCount();
    }

    @Override
    public Integer value1() {
        return getMid();
    }

    @Override
    public Integer value2() {
        return getViewCount();
    }

    @Override
    public ModelViewCountRecord value1(Integer value) {
        setMid(value);
        return this;
    }

    @Override
    public ModelViewCountRecord value2(Integer value) {
        setViewCount(value);
        return this;
    }

    @Override
    public ModelViewCountRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IModelViewCount from) {
        setMid(from.getMid());
        setViewCount(from.getViewCount());
    }

    @Override
    public <E extends IModelViewCount> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModelViewCountRecord
     */
    public ModelViewCountRecord() {
        super(ModelViewCount.MODEL_VIEW_COUNT);
    }

    /**
     * Create a detached, initialised ModelViewCountRecord
     */
    public ModelViewCountRecord(Integer mid, Integer viewCount) {
        super(ModelViewCount.MODEL_VIEW_COUNT);

        setMid(mid);
        setViewCount(viewCount);
    }

    /**
     * Create a detached, initialised ModelViewCountRecord
     */
    public ModelViewCountRecord(edu.uci.ics.texera.dao.jooq.generated.tables.pojos.ModelViewCount value) {
        super(ModelViewCount.MODEL_VIEW_COUNT);

        if (value != null) {
            setMid(value.getMid());
            setViewCount(value.getViewCount());
        }
    }
}
